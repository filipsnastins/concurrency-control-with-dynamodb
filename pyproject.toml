[tool.poetry]
name = "src"
version = "0.0.0"
description = ""
authors = ["Filips Nastins <nastinsfilips@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
aiobotocore = { extras = ["boto3"], version = "^2.11.1" }
boto3-stubs = "^1.34.29"
pydantic = "^2.5.3"
types-aiobotocore = "^2.12.1"

[tool.poetry.group.dev.dependencies]
autoflake = "^2.2.1"
bandit = "^1.7.6"
black = "^24.1.1"
flake8 = "^7.0.0"
flake8-annotations = "^3.0.1"
flake8-black = "^0.3.6"
flake8-bugbear = "^24.1.17"
flake8-isort = "^6.1.1"
flake8-junit-report = "^2.1.0"
flake8-picky-parentheses = "^0.5.4"
flake8-pyproject = "^1.2.3"
flake8-pytest-style = "^1.7.2"
flake8-return = "^1.2.0"
flake8-simplify = "^0.21.0"
isort = "^5.13.2"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
pytest = "^7.4.4"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-env = "^1.1.3"
pytest-mock = "^3.12.0"
ruff = "^0.2.1"
tomodachi-testcontainers = "^1.1.0"
tryceratops = "^2.3.2"

[tool.poetry.scripts]
hooks = "dev:hooks"
format = "dev:format"
lint = "dev:lint"
test = "dev:test"
test-docs-src = "dev:test_docs_src"
test-ci = "dev:test_ci"

[tool.black]
line-length = 120
target-version = ['py312']
include = '\.pyi?$'
exclude = '\.git/|\.mypy_cache/|\.venv/|\.pytest_cache/|\.vscode/|__pycache__/|build/|dist/'

[tool.isort]
profile = "black"
line_length = 120
skip = [
    ".git",
    ".ruff_cache",
    ".mypy_cache",
    ".venv",
    ".pytest_cache",
    ".vscode",
    "__pycache__",
    "build",
    "dist",
]

[tool.bandit]
exclude_dirs = [
    ".git",
    ".ruff_cache",
    ".mypy_cache",
    ".venv",
    ".pytest_cache",
    ".vscode",
    "__pycache__",
    "build",
    "dist",
]

[tool.flake8]
ignore = ["E501", "W503", "PT016", "ANN101", "E704"]
literal-inline-quotes = "double"
literal-multiline-quotes = "double"
exclude = [
    ".git",
    ".ruff_cache",
    ".mypy_cache",
    ".venv",
    ".pytest_cache",
    ".vscode",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff]
target-version = "py312"
line-length = 120
exclude = [
    ".git",
    ".ruff_cache",
    ".mypy_cache",
    ".venv",
    ".pytest_cache",
    ".vscode",
    "__pycache__",
    "build",
    "dist",
]

[tool.mypy]
python_version = "3.12"
plugins = ["pydantic.mypy"]

check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
log_level = "INFO"
filterwarnings = [
    'ignore:datetime\.datetime\.utcnow\(\) is deprecated and scheduled for removal:DeprecationWarning',
]
env = [
    # Set dummy AWS credentials so that we don't accidentally mutate real infrastructure
    "AWS_REGION=us-east-1",
    "AWS_DEFAULT_REGION=us-east-1",
    "AWS_ACCESS_KEY_ID=testing",
    "AWS_SECRET_ACCESS_KEY=testing",
    "AWS_SECURITY_TOKEN=testing",
    "AWS_SESSION_TOKEN=testing",
]

[tool.coverage.run]
branch = true

[tool.coverage.report]
skip_covered = true
show_missing = true
include_namespace_packages = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
